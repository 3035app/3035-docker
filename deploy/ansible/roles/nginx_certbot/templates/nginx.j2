{% for endpoint in NGINX_ENDPOINTS %}

    server {
        listen 443;
        listen [::]:443;

        server_name {{ endpoint.hostname }};

       {% if endpoint.ips_only %}
           {% for ip in endpoint.ips_only %}
           allow {{Â ip }};
           {% endfor %}
           deny all;
       {% endif %}

        {% if 'max_upload_size' in endpoint %}
            client_max_body_size {{ endpoint.max_upload_size }};
        {% endif %}

        ssl on;
        ssl_certificate /etc/letsencrypt/live/{{ endpoint.hostname }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ endpoint.hostname }}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Don't send nginx version to the client
        server_tokens off;

        access_log {{ NGINX_LOG_DIR }}/{{ endpoint.log_access_filename }};
        error_log {{ NGINX_LOG_DIR }}/{{ endpoint.log_error_filename }};

        gzip on;

        # Proxy pass to docker
        location / {
            expires -1;
            proxy_pass_header Server;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_set_header X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto    $scheme;
            proxy_connect_timeout 10;
            proxy_read_timeout 100;
            proxy_pass http://localhost:{{ endpoint.docker_port }}; # Docker
        }

        {% if endpoint.serve_static_path %}
            # Serving static files
            location /static/ {
              alias {{ endpoint.serve_static_path }}/;
            }
        {% endif %}

    }


    server {
        # Redirect to HTTPS
        listen 80;
        server_name {{ endpoint.hostname }};
        return 301 https://$host$request_uri;
    }

{% endfor %}

